// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Condenser.ApiFirst.DocumentStorage.Api.Models
{
    using Condenser.ApiFirst;
    using Condenser.ApiFirst.DocumentStorage;
    using Condenser.ApiFirst.DocumentStorage.Api;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Schema
    {
        /// <summary>
        /// Initializes a new instance of the Schema class.
        /// </summary>
        public Schema()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Schema class.
        /// </summary>
        public Schema(string swagger = default(string), Info info = default(Info), string host = default(string), string basePath = default(string), IList<Tag> tags = default(IList<Tag>), IList<string> schemes = default(IList<string>), IDictionary<string, Path> paths = default(IDictionary<string, Path>))
        {
            Swagger = swagger;
            Info = info;
            Host = host;
            BasePath = basePath;
            Tags = tags;
            Schemes = schemes;
            Paths = paths;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "swagger")]
        public string Swagger { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "info")]
        public Info Info { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "host")]
        public string Host { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "basePath")]
        public string BasePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<Tag> Tags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemes")]
        public IList<string> Schemes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "paths")]
        public IDictionary<string, Path> Paths { get; set; }

    }
}
